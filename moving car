from OpenGL.GL import*
from OpenGL.GLU import*
from OpenGL.GLUT import*

def MyInit():
    glMatrixMode(GL_PROJECTION)
    glLoadIdentity()
    gluPerspective(60 , 1 , 1 , 60)
    gluLookAt(8,9,10,
              0,0,0,
    0,1,0)

    glClearColor(.6,1,0,2)
    glClear(GL_COLOR_BUFFER_BIT)

def rectangle(x, y, z, x1, y1, z1, x2, y2, z2, x3, y3, z3, r, g, b, typ):
    glColor(r, g, b)
    glBegin(typ)
    glVertex3d(x, y, z)
    glVertex3d(x1, y1, z1)
    glVertex3d(x2, y2, z2)
    glVertex3d(x3, y3, z3)
    glEnd()





x=0
angle=0
forward=0
car_z = 0
car_y =0

def arrowKeys( key, x ,y ):
    global car_z
    global car_y
    if  key == GLUT_KEY_LEFT:
        car_z-=1
        pass

    elif key == GLUT_KEY_RIGHT :
        car_z +=1
        pass

    elif key ==GLUT_KEY_DOWN:
        car_y -=1
        pass
    elif key == GLUT_KEY_UP:
        car_y +=1

    draw()




def draw():
    global angle
    global x
    global forward


    glMatrixMode(GL_MODELVIEW)

    glLoadIdentity()

    glClear(GL_COLOR_BUFFER_BIT)

    glLoadIdentity()
    rectangle(10, -5, -8, -30, -5, -8, -30, -5, 0, 10, -5, 0, 0.4, 0.4, 0.4, GL_POLYGON)

    glLoadIdentity()
    rectangle(10, -5, -22, -45, -5, -22, -45, -5, -8, 10, -5, -8, 0.3, 0, 0, GL_POLYGON)

    glLoadIdentity()
    rectangle(10, -5, 14, -35, -5, 14, -35, -5, 0, 10, -5, 0, 0.3, 0, 0, GL_POLYGON)

    glLoadIdentity()
    rectangle(10, -5, -22, -45, -5, -22, -45, -5, -50, 10, -5, -50, 0, 0, 0, GL_POLYGON)


    glLoadIdentity()
    rectangle(-x + 4, -5, -5, -x, -5, -5, -x, -5, -4, -x + 4, -5, -4, 1, 1, 1, GL_POLYGON)

    glLoadIdentity()
    rectangle(-x + 12, -5, -5, -x + 8, -5, -5, -x + 8, -5, -4, -x + 12, -5, -4, 1, 1, 1, GL_POLYGON)



    glLoadIdentity()
    rectangle(-x - 8, -5, -5, -x - 4, -5, -5, -x - 4, -5, -4, -x - 8, -5, -4, 1, 1, 1, GL_POLYGON)

    glLoadIdentity()
    rectangle(-x - 16, -5, -5, -x - 12, -5, -5, -x - 12, -5, -4, -x - 16, -5, -4, 1, 1, 1, GL_POLYGON)


    glLoadIdentity()
    rectangle(-x - 24, -5, -5, -x - 20, -5, -5, -x - 20, -5, -4, -x - 24, -5, -4, 1, 1, 1, GL_POLYGON)



    glColor3f(1, 1, 1)
    glTranslate(x,0+car_y,0+car_z)
    glScale(1, 0.25, 0.5)
    glutSolidCube(5)

    glLoadIdentity()
    glColor3f(1, 0, 0)

    glTranslate(x,5*0.25+car_y,0+car_z)
    glScale(0.5, 0.25, 0.5)

    glutSolidCube(5)


    glColor3f(.6,.6,.6)
    glLoadIdentity()


    glTranslate(x+1.25,-5*0.25*.5+car_y,5*0.5*0.5+car_z)
    glRotate(angle,0,0,1)

    glutWireTorus(0.15,0.5,12,10)

    glColor3f(.6,.6,.6)

    glLoadIdentity()

    glTranslate(x+-1.25, -5 * 0.25 * .5+car_y, 5 * 0.5 * 0.5+car_z)
    glRotate(angle, 0, 0, 1)

    glutWireTorus(0.15, 0.5, 12, 10)

    glColor3f(.6,.6,.6)

    glLoadIdentity()

    glTranslate(x+1.25, -5 * 0.25 * .5+car_y, -5 * 0.5 * 0.5+car_z)
    glRotate(angle, 0, 0, 1)

    glutWireTorus(0.15, 0.5, 12, 10)



    #ROOT
    glLoadIdentity()
    glColor3f(0.6, 0.3, 0)
    glTranslate(-1.25,0, -9)
    glScale(0.08, 0.7, 0.08)
    glutSolidCube(5)

    glLoadIdentity()
    glColor3f(0.6, 0.3, 0)
    glTranslate(5.25,0, -9)
    glScale(0.08, 0.7, 0.08)
    glutSolidCube(5)

    glLoadIdentity()
    glColor3f(0.6, 0.3, 0)
    glTranslate(-7.25,0, -9)
    glScale(0.08, 0.7, 0.08)
    glutSolidCube(5)

    glLoadIdentity()
    glColor3f(0.6, 0.3, 0)
    glTranslate(-13.25, 0, -9)
    glScale(0.08, 0.7, 0.08)
    glutSolidCube(5)

    #LEAVS
    glLoadIdentity()
    glColor3f(0.2, 0.6, 0)
    glTranslate(-1.25,2.8, -9)
    glutSolidSphere(1.5, 10, 10)

    glLoadIdentity()
    glColor3f(0.2, 0.6, 0)
    glTranslate(5.25,2.8, -9)
    glutSolidSphere(1.5, 10, 10)

    glLoadIdentity()
    glColor3f(0.2, 0.6, 0)
    glTranslate(-7.25,2.8, -9)
    glutSolidSphere(1.5, 10, 10)

    glLoadIdentity()
    glColor3f(0.2, 0.6, 0)
    glTranslate(-13.25,2.8, -9)
    glutSolidSphere(1.5, 10, 10)


    glutSwapBuffers()
    glBegin(GL_LINES)

    if forward:
        angle-=0.1
        x+=0.002
        if x>5:
            forward=False
    else:
        angle+=0.1
        x-=0.002
        if x<-5:
            forward=True













    glEnd()

glutInit()

glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB)
glutInitWindowSize(700, 700)
glutCreateWindow(b"Moving Car program")
glutDisplayFunc(draw)
glutIdleFunc(draw)
glutSpecialFunc(arrowKeys)
MyInit()
glutMainLoop()
